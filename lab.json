{
  "name": "cssstats",
  "library": "styled-components",
  "components": [
    {
      "name": "Font",
      "type": "div",
      "props": {
        "fontFamily": "-apple-system, BlinkMacSystemFont, Roboto, Helvetica, sans-serif",
        "color": "black"
      },
      "style": {
        "fontFamily": "${props.mono ? 'monospace' : props.fontFamily}"
      },
      "examples": [
        "<Font>Hello</Font>",
        "<Font mono>Hello</Font>"
      ],
      "system": []
    },
    {
      "name": "H1",
      "type": "h1",
      "props": {
        "borderColor": "transparent",
        "color": "black",
        "fontSize": null
      },
      "style": {},
      "examples": [
        "<H1>Hello</H1>"
      ],
      "system": [
        "borderColor"
      ]
    },
    {
      "name": "H2",
      "type": "h2",
      "props": {
        "color": "black"
      },
      "style": {},
      "examples": [
        "<H2>Hello</H2>"
      ],
      "system": []
    },
    {
      "name": "Text",
      "type": "div",
      "props": {
        "fontWeight": "normal"
      },
      "style": {},
      "examples": [
        "<Text>Hello</Text>"
      ],
      "system": [
        "fontWeight"
      ]
    },
    {
      "name": "Button",
      "type": "button",
      "props": {
        "fontSize": 1,
        "fontWeight": 600,
        "color": "white",
        "bg": "blue",
        "hover": {
          "backgroundColor": "gray"
        },
        "focus": {
          "backgroundColor": "gray"
        },
        "py": 3,
        "px": 4
      },
      "style": {
        "display": "inline-block",
        "fontFamily": "inherit",
        "borderWidth": 0,
        "borderRadius": "4px",
        "appearance": "none"
      },
      "examples": [
        "<Button children='Click me' />"
      ],
      "system": [
        "fontWeight",
        "hover",
        "focus"
      ]
    },
    {
      "name": "Input",
      "type": "input",
      "props": {
        "m": 0,
        "w": 1,
        "color": "inherit",
        "bg": "transparent",
        "placeholder": "Input a url",
        "borderColor": "black",
        "borderWidth": 1,
        "focus": {
          "borderColor": "blue"
        },
        "active": {
          "borderColor": "blue"
        },
        "py": 3,
        "pl": 3
      },
      "style": {
        "display": "block",
        "boxSizing": "border-box",
        "fontFamily": "inherit",
        "fontSize": "inherit",
        "borderRadius": "4px"
      },
      "examples": [
        "<Input />"
      ],
      "system": [
        "borderColor",
        "borderWidth",
        "focus",
        "active"
      ]
    },
    {
      "name": "Label",
      "type": "label",
      "props": {
        "fontWeight": "bold"
      },
      "style": {},
      "examples": [
        "<Label>Hello</Label>"
      ],
      "system": [
        "fontWeight"
      ]
    },
    {
      "name": "Hr",
      "type": "hr",
      "props": {
        "borderColor": "black",
        "borderWidth": 1
      },
      "style": {},
      "examples": [
        "<Hr />"
      ],
      "system": [
        "borderColor",
        "borderWidth"
      ]
    },
    {
      "name": "Link",
      "type": "a",
      "props": {
        "color": "blue",
        "display": "inline",
        "fontWeight": "normal",
        "href": "#!",
        "borderColor": "transparent"
      },
      "style": {
        "display": "${props.display}",
        "fontWeight": "${props.fontWeight}",
        "textDecoration": "none"
      },
      "examples": [
        "<Link children='Click me' />"
      ],
      "system": [
        "fontWeight",
        "borderColor"
      ]
    },
    {
      "name": "Flex",
      "type": "div",
      "props": {
        "flex": "initial",
        "alignContent": "initial",
        "alignItems": "initial",
        "alignSelf": "initial",
        "basis": "initial",
        "direction": "initial",
        "flow": "initial",
        "grow": "initial",
        "shrink": "initial",
        "wrap": "initial",
        "justify": "initial",
        "order": "initial"
      },
      "style": {
        "display": "flex",
        "flex": "${props.flex}",
        "alignContent": "${props.alignContent}",
        "alignItems": "${props.alignItems}",
        "alignSelf": "${props.self}",
        "flexBasis": "${props.basis}",
        "flexDirection": "${props.direction}",
        "flexFlow": "${props.flow}",
        "flexGrow": "${props.grow}",
        "flexShrink": "${props.shrink}",
        "flexWrap": "${props.wrap}",
        "justifyContent": "${props.justify}",
        "order": "${props.order}"
      },
      "examples": [
        "<Flex\n  f={6}\n  p={4}\n  mb={2}\n  bg='black'\n  color='white'\n  justify='space-around'\n>\n  <Flex children='<Flex />' />\n</Flex>",
        "<Flex\n  p={4}\n  mb={2}\n  bg='black'\n  justify='space-between'\n>\n  <Flex bg='white' p={4} w={1/4} />\n  <Flex bg='white' p={4} w={1/4} />\n</Flex>",
        "<Flex\n  p={4}\n  mb={2}\n  bg='black'\n  justify='flex-end'\n>\n  <Flex bg='white' mr={2}p={4} w={1/4} />\n  <Flex bg='white' p={4} w={1/4} />\n</Flex>",
        "<Flex\n  p={4}\n  mb={2}\n  bg='black'\n  justify='flex-start'\n>\n  <Flex bg='white' mr={2}p={4} w={1/4} />\n  <Flex bg='white' p={4} w={1/4} />\n</Flex>",
        "<Flex\n  p={4}\n  mb={2}\n  bg='black'\n>\n  <Flex bg='gray' grow={1} mr={2}p={4} w={1/4} />\n  <Flex bg='white' p={4} w={1/4} />\n</Flex>"
      ],
      "system": []
    },
    {
      "name": "Header",
      "imports": [
        "Flex",
        "Link"
      ],
      "jsx": "<Flex\n  py={2}\n  alignItems='center'\n  justify='space-between'\n>\n  <Link\n    href='/'\n    fontSize={3}\n    fontWeight='bold'\n    color='black'\n    children='Css Stats'\n  />\n  \n  <Link\n    fontWeight='bold'\n    color='black'\n    href='https://github.com/cssstats/cssstats'\n    children='GitHub'\n  />\n</Flex>",
      "examples": [
        "<Header />"
      ],
      "system": []
    },
    {
      "name": "Footer",
      "imports": [
        "Flex",
        "Link",
        "Div",
        "Hr"
      ],
      "jsx": "<Div>\n  <Hr />\n  <Flex\n    py={3}\n    alignItems='center'\n    justify='space-between'\n  >\n    <Div>\n      Made by\n      <Link\n        href='https://compositor.io'\n        ml={1}\n        fontWeight='bold'\n        color='black'\n        children='compositor.io'\n      />\n    </Div>\n    <Div>\n      <Link\n        fontWeight='bold'\n        color='black'\n        href='https://github.com/cssstats/cssstats/issues'\n        children='Issues'\n      />\n      <Link\n        ml={2}\n        fontWeight='bold'\n        color='black'\n        href='https://github.com/cssstats/cssstats'\n        children='GitHub'\n      />\n    </Div>\n  </Flex>\n</Div>",
      "examples": [
        "<Footer />"
      ],
      "system": []
    },
    {
      "name": "Div",
      "type": "div",
      "props": {},
      "style": {},
      "examples": [
        "<Div>Hello</Div>"
      ]
    },
    {
      "name": "LinkBox",
      "imports": [
        "Flex",
        "Link"
      ],
      "jsx": "<Flex\n  wrap='wrap'\n  children={props.links.map(link =>\n    <Flex\n      key={link.name || link}\n      py={3}\n      w={[1/2, 1/3, 1/6]}\n    >\n      <Link\n        fontWeight={600}\n        display='block'\n        href={link.url || link}\n        title={link.name || link}\n        children={link.name || link}\n      />\n    </Flex>\n  )}\n/>",
      "examples": [
        "<LinkBox\n  links={[\n   'foo.com',\n   'foo.com',\n   'foo.com',\n   'foo.com',\n   'foo.com',\n   'foo.com',\n   'foo.com',\n   'foo.com',\n   'foo.com'\n  ]}\n/>"
      ],
      "system": []
    },
    {
      "name": "Container",
      "type": "Font",
      "props": {
        "px": 1
      },
      "style": {
        "maxWidth": "72rem",
        "marginLeft": "auto",
        "marginRight": "auto"
      },
      "examples": [
        "<Container />"
      ],
      "system": []
    },
    {
      "name": "Dl",
      "type": "dl",
      "props": {},
      "style": {},
      "examples": [
        "<Dl></Dl>"
      ],
      "system": []
    },
    {
      "name": "Dt",
      "type": "dt",
      "props": {
        "fontWeight": "bold"
      },
      "style": {},
      "examples": [
        "<Dt>Hello</Dt>"
      ],
      "system": [
        "fontWeight"
      ]
    },
    {
      "name": "Dd",
      "type": "dd",
      "props": {
        "ml": 0,
        "fontWeight": "normal"
      },
      "style": {},
      "examples": [
        "<Dd>Hello</Dd>"
      ],
      "system": [
        "fontWeight"
      ]
    },
    {
      "name": "SlabStat",
      "imports": [
        "Dl",
        "Dt",
        "Dd"
      ],
      "jsx": "<Dl>\n  <Dt\n    children={props.title}\n  />\n  <Dd\n    f={6}\n    fontWeight='bold'\n    children={props.stat}\n  />\n</Dl>",
      "examples": [
        "<SlabStat\n  title='Heights'\n  stat='80'\n/>"
      ],
      "system": []
    },
    {
      "name": "GiantSlabStat",
      "imports": [
        "Dl",
        "Dt",
        "Dd"
      ],
      "jsx": "<Dl>\n  <Dt\n    f={3}\n    children={props.title}\n  />\n  <Dd\n    f={6}\n    fontWeight='bold'\n    children={props.stat}\n  />\n</Dl>",
      "examples": [
        "<GiantSlabStat\n  title='Heights'\n  stat='80'\n/>"
      ],
      "system": []
    },
    {
      "name": "Color",
      "imports": [
        "Div",
        "Text"
      ],
      "jsx": "<Div>\n  <Text\n    f={7}\n    fontWeight='bold'\n    children='Aa'\n    style={{\n      color: props.color\n    }}\n  />\n  <Text\n    f={1}\n    children={props.color}\n  />\n</Div>",
      "examples": [
        "<Color color='tomato' />"
      ],
      "system": []
    },
    {
      "name": "BackgroundColor",
      "imports": [
        "Div",
        "Text"
      ],
      "jsx": "<Div>\n  <svg\n    viewBox=\"0 0 64 64\"\n    width=\"64\"\n    height=\"64\"\n    style={{\n      display: 'block',\n      width: '100%',\n      height: 'auto'\n    }}\n  >\n    <rect width=\"64\" height=\"64\" fill={props.color}></rect>\n  </svg>\n\n  <Text\n    f={1}\n    children={props.color}\n  />\n</Div>",
      "examples": [
        "<BackgroundColor\n  color='tomato'\n/>"
      ],
      "system": []
    },
    {
      "name": "Pre",
      "type": "pre",
      "props": {
        "bg": "lightgray",
        "p": 3,
        "borderRadius": 3
      },
      "style": {
        "maxHeight": "50vh",
        "overflow": "auto"
      },
      "examples": [
        "<Pre>Hello</Pre>"
      ],
      "system": [
        "borderRadius"
      ]
    },
    {
      "name": "CodeBlock",
      "imports": [
        "Pre",
        "Font"
      ],
      "jsx": "<Font mono>\n  <Pre\n    children={props.children}\n  />\n</Font>",
      "examples": [
        "<CodeBlock\n  children={`\n.css {\n  is: fun;\n}\n  `.trim()}\n/>"
      ],
      "system": []
    },
    {
      "name": "Logo",
      "imports": [
        "Div",
        "Flex",
        "Text"
      ],
      "jsx": "<svg\n  xmlns=\"http://www.w3.org/2000/svg\"\n  viewBox=\"0 0 16 16\"\n  width={props.size}\n  height={props.size}\n  fill={props.color || 'currentcolor'}\n>\n  <g\n    fontFamily=\"inherit\"\n    fontSize=\"12px\"\n    fontWeight=\"bold\"\n    >\n      <text\n        x=\"0.5\"\n        y=\"11\"\n        children='{'\n      />\n      <text\n        x=\"15.5\"\n        y=\"11\"\n        textAnchor=\"end\"\n        children='}'\n      />\n    </g>\n\n    <rect\n      x=\"5\"\n      y=\"7\"\n      width=\"2.5\"\n      height=\"4\"\n    />\n    <rect\n      x=\"8.5\"\n      y=\"5\"\n      width=\"2.5\"\n      height=\"6\"\n    />\n</svg>",
      "examples": [
        "<Logo\n  size={42}\n/>"
      ],
      "system": []
    },
    {
      "name": "Loading",
      "imports": [],
      "jsx": "<svg\n  xmlns=\"http://www.w3.org/2000/svg\"\n  viewBox=\"0 0 32 32\"\n  width={props.size}\n  height={props.size}\n  fill={props.color || 'currentcolor'}\n>\n  <path transform=\"translate(2)\" d=\"M0 12 V20 H4 V12z\"> \n    <animate attributeName=\"d\" values=\"M0 12 V20 H4 V12z; M0 4 V28 H4 V4z; M0 12 V20 H4 V12z; M0 12 V20 H4 V12z\" dur=\"1.2s\" repeatCount=\"indefinite\" begin=\"0\" keytimes=\"0;.2;.5;1\" keySplines=\"0.2 0.2 0.4 0.8;0.2 0.6 0.4 0.8;0.2 0.8 0.4 0.8\" calcMode=\"spline\"/>\n  </path>\n  <path transform=\"translate(8)\" d=\"M0 12 V20 H4 V12z\">\n    <animate attributeName=\"d\" values=\"M0 12 V20 H4 V12z; M0 4 V28 H4 V4z; M0 12 V20 H4 V12z; M0 12 V20 H4 V12z\" dur=\"1.2s\" repeatCount=\"indefinite\" begin=\"0.2\" keytimes=\"0;.2;.5;1\" keySplines=\"0.2 0.2 0.4 0.8;0.2 0.6 0.4 0.8;0.2 0.8 0.4 0.8\" calcMode=\"spline\"/>\n  </path>\n  <path transform=\"translate(14)\" d=\"M0 12 V20 H4 V12z\">\n    <animate attributeName=\"d\" values=\"M0 12 V20 H4 V12z; M0 4 V28 H4 V4z; M0 12 V20 H4 V12z; M0 12 V20 H4 V12z\" dur=\"1.2s\" repeatCount=\"indefinite\" begin=\"0.4\" keytimes=\"0;.2;.5;1\" keySplines=\"0.2 0.2 0.4 0.8;0.2 0.6 0.4 0.8;0.2 0.8 0.4 0.8\" calcMode=\"spline\"/>\n  </path>\n  <path transform=\"translate(20)\" d=\"M0 12 V20 H4 V12z\">\n    <animate attributeName=\"d\" values=\"M0 12 V20 H4 V12z; M0 4 V28 H4 V4z; M0 12 V20 H4 V12z; M0 12 V20 H4 V12z\" dur=\"1.2s\" repeatCount=\"indefinite\" begin=\"0.6\" keytimes=\"0;.2;.5;1\" keySplines=\"0.2 0.2 0.4 0.8;0.2 0.6 0.4 0.8;0.2 0.8 0.4 0.8\" calcMode=\"spline\"/>\n  </path>\n  <path transform=\"translate(26)\" d=\"M0 12 V20 H4 V12z\">\n    <animate attributeName=\"d\" values=\"M0 12 V20 H4 V12z; M0 4 V28 H4 V4z; M0 12 V20 H4 V12z; M0 12 V20 H4 V12z\" dur=\"1.2s\" repeatCount=\"indefinite\" begin=\"0.8\" keytimes=\"0;.2;.5;1\" keySplines=\"0.2 0.2 0.4 0.8;0.2 0.6 0.4 0.8;0.2 0.8 0.4 0.8\" calcMode=\"spline\"/>\n  </path>\n</svg>",
      "examples": [
        "<Loading\n  color='tomato'\n  size={32}\n/>"
      ],
      "system": []
    },
    {
      "name": "Svg",
      "type": "svg",
      "props": {},
      "style": {},
      "examples": [
        "<Svg viewBox='0 0 32 32' color='blue'>\n<rect\n  fill='currentcolor'\n  width={32}\n  height={32}\n/>\n</Svg>"
      ],
      "system": []
    },
    {
      "name": "LoadingCircle",
      "imports": [
        "Svg"
      ],
      "jsx": "  <Svg\n    color={props.color}\n    xmlns='http://www.w3.org/2000/svg'\n    viewBox='0 0 32 32'\n    width={props.size}\n    height={props.size}\n    fill='currentcolor'>\n    <path\n      opacity='.25'\n      d='M16 0 A16 16 0 0 0 16 32 A16 16 0 0 0 16 0 M16 4 A12 12 0 0 1 16 28 A12 12 0 0 1 16 4'\n    />\n    <path d='M16 0 A16 16 0 0 1 32 16 L28 16 A12 12 0 0 0 16 4z'>\n      <animateTransform\n        attributeName='transform'\n        type='rotate'\n        from='0 16 16'\n        to='360 16 16'\n        dur='0.8s'\n        repeatCount='indefinite'\n      />\n    </path>\n  </Svg>\n",
      "examples": [
        "<LoadingCircle size={32} color='blue' />"
    },
    {
      "name": "Form",
      "type": "form",
      "props": {},
      "style": {},
      "examples": [
        "<Form>Form</Form>"
      ],
      "system": []
    }
  ]
}
